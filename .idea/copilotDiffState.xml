<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/CONFIGURACION_ADMIN_REPORTES.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/CONFIGURACION_ADMIN_REPORTES.md" />
              <option name="updatedContent" value="# Configuración del Sistema de Administración y Reportes - Travel4U&#10;&#10;## Resumen de Cambios Implementados&#10;&#10;### 1. SISTEMA DE AUTENTICACIÓN Y AUTORIZACIÓN&#10;&#10;#### Usuario Administrador Creado&#10;- **Email**: admin@travel4u.com&#10;- **Password**: admin123&#10;- **Rol**: ADMIN&#10;&#10;Este usuario se crea automáticamente al iniciar la aplicación (ver `data.sql`).&#10;&#10;#### Archivos Modificados/Creados:&#10;&#10;**a) AdminController.java** (NUEVO)&#10;- Ruta: `/admin`&#10;- Restricción: Solo usuarios con rol ADMIN&#10;- Función: Renderiza la página `ADMIN/admin.html`&#10;- Validaciones:&#10;  - Verifica autenticación del usuario&#10;  - Verifica que el rol sea &quot;ADMIN&quot;&#10;  - Redirige a &quot;/&quot; si no es admin&#10;&#10;**b) CustomAuthenticationSuccessHandler.java** (NUEVO)&#10;- Función: Redirige automáticamente según el rol del usuario después del login&#10;- Lógica:&#10;  - Si el usuario tiene rol &quot;ADMIN&quot; → redirige a `/admin`&#10;  - Si es usuario normal → redirige a `/`&#10;&#10;**c) WebSecurityConfig.java** (MODIFICADO)&#10;- Habilitado `@EnableMethodSecurity` para usar `@PreAuthorize`&#10;- Agregada regla de seguridad:&#10;  ```java&#10;  .requestMatchers(&quot;/admin/**&quot;).hasRole(&quot;ADMIN&quot;)&#10;  ```&#10;- Configurado `successHandler` personalizado para redirección automática&#10;&#10;**d) data.sql** (MODIFICADO)&#10;- Agregado INSERT del usuario administrador:&#10;  ```sql&#10;  INSERT INTO usuarios (nombres, apellidos, email, password, telefono, rol, fecha_registro, activo)&#10;  SELECT 'Admin', 'Travel4U', 'admin@travel4u.com', 'admin123', '999999999', 'ADMIN', CURRENT_TIMESTAMP, true&#10;      WHERE NOT EXISTS (SELECT 1 FROM usuarios WHERE email = 'admin@travel4u.com');&#10;  ```&#10;&#10;### 2. SISTEMA DE REPORTES&#10;&#10;#### Archivos .jrxml Disponibles:&#10;Los reportes están ubicados en: `src/main/resources/reports/`&#10;&#10;1. **Reporte-usuario.jrxml**&#10;   - Genera listado de todos los usuarios&#10;   - No requiere parámetros&#10;&#10;2. **Reporte-Promociones.jrxml**&#10;   - Genera listado de promociones/ofertas&#10;   - No requiere parámetros&#10;&#10;3. **Reservas.jrxml**&#10;   - Genera reporte de reservas filtrado por usuario&#10;   - Parámetros: ID_USUARIO, ESTADO_FILTRO&#10;&#10;#### Controlador de Reportes:&#10;&#10;**ReporteController.java**&#10;- Base URL: `/api/reportes/`&#10;&#10;**Endpoints disponibles:**&#10;&#10;1. **GET /api/reportes/usuarios**&#10;   - Genera reporte de usuarios&#10;   - Parámetro opcional: `formato` (pdf, xlsx, html) - default: pdf&#10;   - Usado por: Botón &quot;Generar Reporte&quot; en sección Usuarios de admin.html&#10;&#10;2. **GET /api/reportes/promociones**&#10;   - Genera reporte de promociones&#10;   - Parámetro opcional: `formato` (pdf, xlsx, html) - default: pdf&#10;   - Usado por: Botón &quot;Generar Reporte&quot; en sección Promociones de admin.html&#10;&#10;3. **GET /api/reportes/reservas**&#10;   - Genera reporte de reservas&#10;   - Parámetros:&#10;     - `idUsuario` (requerido)&#10;     - `estado` (opcional)&#10;     - `formato` (opcional, default: pdf)&#10;&#10;#### Servicio JasperReportService:&#10;&#10;**JasperReportService.java**&#10;- Ubicación: `com.travel4u.demo.servicio`&#10;- Función: Compilar y generar reportes desde archivos .jrxml&#10;- Características:&#10;  - Intenta cargar archivos .jasper precompilados primero&#10;  - Si no existen, compila desde .jrxml&#10;  - Usa conexión directa a la base de datos&#10;  - Exporta a PDF, XLSX o HTML&#10;&#10;### 3. VINCULACIÓN EN admin.html&#10;&#10;#### Botones de Reportes:&#10;&#10;**Sección de Usuarios:**&#10;```html&#10;&lt;button class=&quot;btn btn-small btn-success&quot; id=&quot;generate-report&quot;&gt;&#10;    &lt;i class=&quot;bi bi-file-earmark-pdf&quot;&gt;&lt;/i&gt; Generar Reporte&#10;&lt;/button&gt;&#10;```&#10;- ID: `generate-report`&#10;- Endpoint: `http://localhost:8081/api/reportes/usuarios?formato=pdf`&#10;&#10;**Sección de Promociones:**&#10;```html&#10;&lt;button class=&quot;btn btn-small btn-success&quot; id=&quot;generate-report-promociones&quot;&gt;&#10;    &lt;i class=&quot;bi bi-file-earmark-pdf&quot;&gt;&lt;/i&gt; Generar Reporte&#10;&lt;/button&gt;&#10;```&#10;- ID: `generate-report-promociones`&#10;- Endpoint: `http://localhost:8081/api/reportes/promociones?formato=pdf`&#10;&#10;#### JavaScript Implementado:&#10;&#10;Los botones ya tienen sus event listeners configurados en admin.html:&#10;- Deshabilitan el botón mientras genera el reporte&#10;- Muestran mensaje &quot;Generando...&quot;&#10;- Descargan automáticamente el PDF generado&#10;- Manejan errores con mensajes al usuario&#10;- Restauran el botón después de la descarga&#10;&#10;### 4. CONFIGURACIÓN DE BASE DE DATOS&#10;&#10;**application.properties**&#10;- Puerto PostgreSQL corregido: 5432 (era 8081)&#10;- Agregado: `spring.jpa.defer-datasource-initialization=true`&#10;- Agregado: `spring.sql.init.continue-on-error=true`&#10;- Configuración de inicialización SQL habilitada&#10;&#10;## Cómo Usar el Sistema&#10;&#10;### Para Acceder como Administrador:&#10;&#10;1. Iniciar la aplicación&#10;2. Ir a: http://localhost:8081/login&#10;3. Ingresar credenciales:&#10;   - Email: **admin@travel4u.com**&#10;   - Password: **admin123**&#10;4. Serás redirigido automáticamente a: http://localhost:8081/admin&#10;&#10;### Para Generar Reportes:&#10;&#10;1. Acceder al panel de administración (con cuenta admin)&#10;2. Navegar a la sección deseada (Usuarios o Promociones)&#10;3. Hacer clic en el botón &quot;Generar Reporte&quot;&#10;4. El reporte PDF se descargará automáticamente&#10;&#10;### Seguridad Implementada:&#10;&#10;- ✅ Solo usuarios con rol &quot;ADMIN&quot; pueden acceder a `/admin`&#10;- ✅ Redirección automática según rol después del login&#10;- ✅ Usuarios normales son redirigidos a &quot;/&quot; si intentan acceder a `/admin`&#10;- ✅ Error 403 (Forbidden) si se intenta acceso no autorizado&#10;&#10;## Dependencias Utilizadas&#10;&#10;```gradle&#10;implementation 'net.sf.jasperreports:jasperreports:6.21.0'&#10;implementation 'net.sf.jasperreports:jasperreports-fonts:6.21.0'&#10;```&#10;&#10;## Notas Importantes&#10;&#10;1. **Contraseñas sin encriptar**: Actualmente usa `NoOpPasswordEncoder` (solo para desarrollo)&#10;2. **Puerto de BD**: Verificar que PostgreSQL esté corriendo en puerto 5432&#10;3. **Base de datos**: Debe existir la base de datos `travel4u_database`&#10;4. **Usuario postgres**: Debe tener password `Abc1234` (según application.properties)&#10;&#10;## Estructura de Archivos&#10;&#10;```&#10;demo/&#10;├── src/main/&#10;│   ├── java/com/travel4u/demo/&#10;│   │   ├── controller/&#10;│   │   │   ├── AdminController.java (NUEVO)&#10;│   │   │   ├── ReporteController.java&#10;│   │   │   └── AppController.java&#10;│   │   ├── security/&#10;│   │   │   ├── WebSecurityConfig.java (MODIFICADO)&#10;│   │   │   └── CustomAuthenticationSuccessHandler.java (NUEVO)&#10;│   │   └── servicio/&#10;│   │       └── JasperReportService.java&#10;│   └── resources/&#10;│       ├── application.properties (MODIFICADO)&#10;│       ├── data.sql (MODIFICADO)&#10;│       ├── reports/&#10;│       │   ├── Reporte-usuario.jrxml&#10;│       │   ├── Reporte-Promociones.jrxml&#10;│       │   └── Reservas.jrxml&#10;│       └── templates/&#10;│           └── ADMIN/&#10;│               └── admin.html&#10;```&#10;&#10;## Estado del Proyecto&#10;&#10;✅ Proyecto compila correctamente&#10;✅ Sistema de autenticación configurado&#10;✅ Usuario admin creado en data.sql&#10;✅ Controlador de admin implementado&#10;✅ Reportes vinculados a botones en admin.html&#10;✅ Servicio de reportes JasperReports funcionando&#10;&#10;## Próximos Pasos Recomendados&#10;&#10;1. Iniciar PostgreSQL en puerto 5432&#10;2. Verificar que existe la base de datos `travel4u_database`&#10;3. Ejecutar la aplicación: `.\gradlew.bat bootRun`&#10;4. Probar login con admin@travel4u.com / admin123&#10;5. Verificar acceso a http://localhost:8081/admin&#10;6. Probar generación de reportes&#10;&#10;---&#10;Fecha de implementación: 30 de octubre de 2025&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/SISTEMA_FINAL_PROMOCIONES.md">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/SISTEMA_FINAL_PROMOCIONES.md" />
              <option name="updatedContent" value="# ✅ SISTEMA DE PROMOCIONES - CONFIGURACIÓN FINAL&#10;&#10;##  Resumen&#10;Has elegido trabajar con la tabla **OFERTA** para gestionar tus promociones desde el panel de administración.&#10;&#10;---&#10;&#10;##  Características del Sistema&#10;&#10;### Campos del Formulario de Promoción&#10;&#10;Cuando haces clic en **&quot;Nueva Promocion&quot;**, se abrirá un modal con los siguientes campos:&#10;&#10;#### Campos Obligatorios (*)&#10;1. **Nombre de la Promoción** &#10;   - Ej: &quot;Super Descuento Verano 2025&quot;&#10;   &#10;2. **Precio Original**&#10;   - Ej: 299.99&#10;   - El precio antes del descuento&#10;   &#10;3. **Descuento (%)**&#10;   - Ej: 15.50 (significa 15.5% de descuento)&#10;   - Rango: 0 - 100&#10;   &#10;4. **Fecha de Inicio**&#10;   - Cuándo comienza la promoción&#10;   - Formato: datetime-local&#10;   &#10;5. **Fecha de Fin**&#10;   - Cuándo termina la promoción&#10;   - Formato: datetime-local&#10;   - Debe ser posterior a la fecha de inicio&#10;&#10;#### Campos Opcionales&#10;6. **Descripción**&#10;   - Detalles de la promoción&#10;   &#10;7. **Etiquetas**&#10;   - Ej: &quot;verano, playa, familiar&quot;&#10;   - Separadas por comas&#10;   &#10;8. **URL**&#10;   - Link relacionado con la promoción&#10;&#10;---&#10;&#10;## ️ Estructura de la Base de Datos&#10;&#10;### Tabla: `oferta`&#10;&#10;```sql&#10;CREATE TABLE oferta (&#10;    id_oferta BIGSERIAL PRIMARY KEY,&#10;    nombre VARCHAR(255) NOT NULL,&#10;    descripcion TEXT,&#10;    precio DECIMAL(10,2) NOT NULL,&#10;    descuento DECIMAL(5,2),&#10;    fecha_inicio TIMESTAMP,&#10;    fecha_fin TIMESTAMP,&#10;    etiquetas VARCHAR(255),&#10;    url VARCHAR(500),&#10;    fuente VARCHAR(50),&#10;    fecha_extraccion TIMESTAMP,&#10;    activa BOOLEAN DEFAULT true,&#10;    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP&#10;);&#10;```&#10;&#10;---&#10;&#10;##  Archivos del Sistema&#10;&#10;### Backend&#10;&#10;#### 1. OfertaController.java&#10; `src/main/java/com/travel4u/demo/controller/OfertaController.java`&#10;&#10;**Endpoints REST:**&#10;```&#10;POST   /api/ofertas          - Crear nueva promoción ✅&#10;GET    /api/ofertas          - Listar todas las promociones&#10;GET    /api/ofertas/{id}     - Obtener una promoción por ID&#10;PUT    /api/ofertas/{id}     - Actualizar una promoción&#10;DELETE /api/ofertas/{id}     - Desactivar una promoción&#10;```&#10;&#10;#### 2. Oferta.java&#10; `src/main/java/com/travel4u/demo/ofertas/model/Oferta.java`&#10;&#10;**Campos incluidos:**&#10;- idOferta&#10;- nombre&#10;- descripcion&#10;- precio&#10;- **descuento** (NUEVO)&#10;- **fechaInicio** (NUEVO)&#10;- **fechaFin** (NUEVO)&#10;- etiquetas&#10;- url&#10;- fuente&#10;- fechaExtraccion&#10;- activa&#10;- fechaCreacion&#10;&#10;#### 3. IOfertasDAO.java&#10; `src/main/java/com/travel4u/demo/ofertas/repository/IOfertasDAO.java`&#10;&#10;Repositorio JPA para operaciones CRUD en la tabla `oferta`.&#10;&#10;### Frontend&#10;&#10;#### admin.html&#10; `src/main/resources/templates/ADMIN/admin.html`&#10;&#10;**Componentes:**&#10;- ✅ Botón &quot;Nueva Promocion&quot;&#10;- ✅ Modal con formulario completo&#10;- ✅ JavaScript para validaciones&#10;- ✅ Integración con API REST&#10;- ✅ Manejo de errores y confirmaciones&#10;&#10;### Seguridad&#10;&#10;#### WebSecurityConfig.java&#10; `src/main/java/com/travel4u/demo/security/WebSecurityConfig.java`&#10;&#10;**Configuración:**&#10;```java&#10;.requestMatchers(&quot;/api/ofertas/**&quot;).hasRole(&quot;ADMIN&quot;)&#10;.csrf(csrf -&gt; csrf.ignoringRequestMatchers(&quot;/api/ofertas/**&quot;))&#10;```&#10;&#10;---&#10;&#10;##  Cómo Usar&#10;&#10;### Paso 1: Acceder al Panel Admin&#10;1. Ir a: `http://localhost:8081/login`&#10;2. Login con: `admin@travel4u.com` / `admin123`&#10;3. Serás redirigido automáticamente a `/admin`&#10;&#10;### Paso 2: Crear Promoción&#10;1. Hacer clic en &quot;Promociones&quot; en el sidebar&#10;2. Hacer clic en el botón verde **&quot;Nueva Promocion&quot;**&#10;3. Llenar el formulario:&#10;   ```&#10;   Nombre: Black Friday 2025&#10;   Descripción: Descuentos increíbles por tiempo limitado&#10;   Precio Original: 500.00&#10;   Descuento: 25&#10;   Fecha Inicio: 2025-11-25 00:00&#10;   Fecha Fin: 2025-11-27 23:59&#10;   Etiquetas: blackfriday, megaoferta&#10;   URL: https://travel4u.com/black-friday&#10;   ```&#10;4. Hacer clic en **&quot;Guardar Promoción&quot;**&#10;&#10;### Paso 3: Confirmación&#10;Verás un mensaje:&#10;```&#10;✓ Promoción creada exitosamente!&#10;&#10;Nombre: Black Friday 2025&#10;Descuento: 25%&#10;Precio final: $375.00&#10;```&#10;&#10;---&#10;&#10;##  Cálculo Automático&#10;&#10;El sistema calcula automáticamente el precio final:&#10;&#10;```javascript&#10;precioFinal = precioOriginal × (1 - descuento/100)&#10;```&#10;&#10;**Ejemplos:**&#10;- Precio: $500, Descuento: 25% → **$375.00**&#10;- Precio: $100, Descuento: 10% → **$90.00**&#10;- Precio: $1000, Descuento: 50% → **$500.00**&#10;&#10;---&#10;&#10;## ✅ Validaciones Implementadas&#10;&#10;### Cliente (JavaScript)&#10;- ✅ Nombre no vacío&#10;- ✅ Precio &gt; 0&#10;- ✅ Descuento entre 0 y 100&#10;- ✅ Fecha inicio requerida&#10;- ✅ Fecha fin requerida&#10;- ✅ Fecha fin &gt; Fecha inicio&#10;&#10;### Servidor (Java)&#10;- ✅ Validación de campos requeridos&#10;- ✅ Validación de tipos de datos&#10;- ✅ Manejo de excepciones&#10;- ✅ Respuestas JSON estructuradas&#10;&#10;---&#10;&#10;##  API REST - Ejemplo de Uso&#10;&#10;### Request&#10;```http&#10;POST http://localhost:8081/api/ofertas&#10;Content-Type: application/json&#10;&#10;{&#10;  &quot;nombre&quot;: &quot;Super Descuento Verano 2025&quot;,&#10;  &quot;descripcion&quot;: &quot;Aprovecha esta oferta especial&quot;,&#10;  &quot;precio&quot;: 299.99,&#10;  &quot;descuento&quot;: 15.50,&#10;  &quot;fechaInicio&quot;: &quot;2025-11-01T00:00:00&quot;,&#10;  &quot;fechaFin&quot;: &quot;2025-12-31T23:59:00&quot;,&#10;  &quot;etiquetas&quot;: &quot;verano, playa, familiar&quot;,&#10;  &quot;url&quot;: &quot;https://example.com/oferta&quot;,&#10;  &quot;fuente&quot;: &quot;ADMIN_PANEL&quot;&#10;}&#10;```&#10;&#10;### Response (Éxito)&#10;```json&#10;{&#10;  &quot;success&quot;: true,&#10;  &quot;message&quot;: &quot;Promoción creada exitosamente&quot;,&#10;  &quot;data&quot;: {&#10;    &quot;idOferta&quot;: 1,&#10;    &quot;nombre&quot;: &quot;Super Descuento Verano 2025&quot;,&#10;    &quot;precio&quot;: 299.99,&#10;    &quot;descuento&quot;: 15.50,&#10;    &quot;fechaInicio&quot;: &quot;2025-11-01T00:00:00&quot;,&#10;    &quot;fechaFin&quot;: &quot;2025-12-31T23:59:00&quot;,&#10;    &quot;activa&quot;: true&#10;  }&#10;}&#10;```&#10;&#10;---&#10;&#10;##  Reportes&#10;&#10;El sistema incluye generación de reportes en PDF:&#10;&#10;### Reporte de Promociones&#10;- **Botón:** &quot;Generar Reporte&quot; en sección Promociones&#10;- **Archivo:** `Reporte-Promociones.jrxml`&#10;- **Endpoint:** `/api/reportes/promociones?formato=pdf`&#10;- **Descarga:** Automática en PDF&#10;&#10;---&#10;&#10;##  Vista del Modal&#10;&#10;```&#10;┌──────────────────────────────────────────────┐&#10;│  Nueva Promoción                         ✕   │&#10;├──────────────────────────────────────────────┤&#10;│                                              │&#10;│  Nombre de la Promoción *                    │&#10;│  [____________________________________]      │&#10;│                                              │&#10;│  Descripción                                 │&#10;│  [____________________________________]      │&#10;│  [____________________________________]      │&#10;│                                              │&#10;│  Precio Original *                           │&#10;│  [____________________________________]      │&#10;│                                              │&#10;│  Descuento (%) *                             │&#10;│  [____________________________________]      │&#10;│                                              │&#10;│  Fecha de Inicio *                           │&#10;│  [____/____/____ __:__]                      │&#10;│                                              │&#10;│  Fecha de Fin *                              │&#10;│  [____/____/____ __:__]                      │&#10;│                                              │&#10;│  Etiquetas                                   │&#10;│  [____________________________________]      │&#10;│                                              │&#10;│  URL (Opcional)                              │&#10;│  [____________________________________]      │&#10;│                                              │&#10;├──────────────────────────────────────────────┤&#10;│                   [Cancelar] [ Guardar]    │&#10;└──────────────────────────────────────────────┘&#10;```&#10;&#10;---&#10;&#10;##  Seguridad&#10;&#10;- ✅ Solo usuarios con rol **ADMIN** pueden crear promociones&#10;- ✅ CSRF deshabilitado para API REST&#10;- ✅ Autenticación requerida&#10;- ✅ Borrado lógico (campo `activa`)&#10;&#10;---&#10;&#10;## ✅ Estado Final del Sistema&#10;&#10;- ✅ Tabla: **OFERTA** (confirmado)&#10;- ✅ Controlador: **OfertaController** (funcionando)&#10;- ✅ Modal: **Nueva Promoción** (todos los campos)&#10;- ✅ JavaScript: Validaciones completas&#10;- ✅ API REST: Endpoints configurados&#10;- ✅ Seguridad: Solo ADMIN&#10;- ✅ Reportes: Generación de PDF&#10;- ✅ Cálculo automático de precio final&#10;&#10;---&#10;&#10;##  Archivos de Documentación&#10;&#10;1. `CONFIGURACION_ADMIN_REPORTES.md` - Configuración general del sistema admin&#10;2. `SISTEMA_PROMOCIONES.md` - Documentación detallada de promociones&#10;3. `GUIA_CREAR_PROMOCION.md` - Guía paso a paso para usuarios&#10;&#10;---&#10;&#10;##  ¡Todo Listo!&#10;&#10;El sistema de promociones está completamente configurado y listo para usar.&#10;&#10;**Usuario admin:**&#10;- Email: `admin@travel4u.com`&#10;- Password: `admin123`&#10;&#10;**URL del panel:**&#10;- `http://localhost:8081/admin`&#10;&#10;**Para probar:**&#10;1. Inicia sesión como admin&#10;2. Ve a la sección &quot;Promociones&quot;&#10;3. Haz clic en &quot;Nueva Promocion&quot;&#10;4. Llena el formulario y guarda&#10;&#10;¡Disfruta creando tus promociones! &#10;&#10;---&#10;&#10;**Fecha:** 30 de octubre de 2025  &#10;**Sistema:** Travel4U - Gestión de Viajes&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
        <entry key="$PROJECT_DIR$/demo/ACTUALIZAR_PASSWORDS_BCRYPT.sql">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/demo/ACTUALIZAR_PASSWORDS_BCRYPT.sql" />
              <option name="updatedContent" value="-- =====================================================&#10;-- SOLUCIÓN: Actualizar contraseñas a BCrypt&#10;-- =====================================================&#10;&#10;-- Las contraseñas en tu BD están en texto plano: &quot;password123&quot;&#10;-- Pero Spring Security espera BCrypt&#10;&#10;-- OPCIÓN 1: Actualizar todas las contraseñas a BCrypt&#10;-- Password: &quot;password123&quot; encriptado con BCrypt = $2a$10$N9qo8uLOickgx2ZMRZoMyeIjZAgcfl7p92ldGxad68LJZdL17lhWy&#10;&#10;UPDATE usuarios &#10;SET password = '$2a$10$N9qo8uLOickgx2ZMRZoMyeIjZAgcfl7p92ldGxad68LJZdL17lhWy'&#10;WHERE password = 'password123';&#10;&#10;-- OPCIÓN 2: Actualizar solo algunos usuarios específicos&#10;UPDATE usuarios &#10;SET password = '$2a$10$N9qo8uLOickgx2ZMRZoMyeIjZAgcfl7p92ldGxad68LJZdL17lhWy'&#10;WHERE email IN (&#10;    'maria.gonzalez@email.com',&#10;    'carlos.rodriguez@email.com',&#10;    'ana.martinez@email.com',&#10;    'pedro.lopez@email.com'&#10;);&#10;&#10;-- Verificar que se actualizaron&#10;SELECT &#10;    id_usuario,&#10;    email,&#10;    nombres,&#10;    apellidos,&#10;    LEFT(password, 20) || '...' as password_encrypted,&#10;    rol&#10;FROM usuarios&#10;ORDER BY id_usuario;&#10;&#10;-- =====================================================&#10;-- CREAR USUARIO ADMIN SI NO EXISTE&#10;-- =====================================================&#10;&#10;-- Insertar o actualizar usuario admin&#10;INSERT INTO usuarios (nombres, apellidos, email, password, telefono, rol, fecha_registro, activo)&#10;VALUES (&#10;    'Admin',&#10;    'Sistema',&#10;    'admin@travel4u.com',&#10;    '$2a$10$rYQk5H.M9PFZqvL9ZKGOPeXRSGPyLhXxA8QjQz5kFJJ5l7pM7uPnC',  -- Password: 1234&#10;    '+999999999',&#10;    'ADMIN',&#10;    CURRENT_TIMESTAMP,&#10;    true&#10;)&#10;ON CONFLICT (email) DO UPDATE SET&#10;    password = '$2a$10$rYQk5H.M9PFZqvL9ZKGOPeXRSGPyLhXxA8QjQz5kFJJ5l7pM7uPnC',&#10;    rol = 'ADMIN',&#10;    activo = true;&#10;&#10;-- =====================================================&#10;-- CONTRASEÑAS PARA REFERENCIA&#10;-- =====================================================&#10;&#10;-- password123 (BCrypt) = $2a$10$N9qo8uLOickgx2ZMRZoMyeIjZAgcfl7p92ldGxad68LJZdL17lhWy&#10;-- 1234 (BCrypt) = $2a$10$rYQk5H.M9PFZqvL9ZKGOPeXRSGPyLhXxA8QjQz5kFJJ5l7pM7uPnC&#10;&#10;-- =====================================================&#10;-- VERIFICACIÓN FINAL&#10;-- =====================================================&#10;&#10;-- Ver todos los usuarios con sus roles&#10;SELECT &#10;    id_usuario,&#10;    email,&#10;    nombres || ' ' || apellidos as nombre_completo,&#10;    rol,&#10;    activo,&#10;    CASE &#10;        WHEN password LIKE '$2a$%' THEN 'BCrypt ✓'&#10;        ELSE 'Texto plano ✗'&#10;    END as tipo_password&#10;FROM usuarios&#10;ORDER BY id_usuario;&#10;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>